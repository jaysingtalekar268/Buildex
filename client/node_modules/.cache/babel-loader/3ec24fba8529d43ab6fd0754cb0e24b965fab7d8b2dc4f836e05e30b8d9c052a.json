{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\code\\\\web development\\\\buildex\\\\client\\\\src\\\\Components\\\\message\\\\message.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { Container, Row, Col, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport './message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Message() {\n  _s();\n  const username = JSON.parse(localStorage.getItem(\"user\"));\n  const [userMessage, setUMesg] = useState(\"\");\n  const isLoading = useRef(true); // Loading state\n  // console.warn(\"uname \"+username.name);\n  const getUmessage = async () => {\n    let userMData = await fetch(\"http://localhost:3001/getusermessage\", {\n      method: \"post\",\n      body: JSON.stringify({\n        name: username.name\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    userMData = await userMData.json();\n    if (userMData) {\n      setUMesg(userMData);\n      console.warn(\"umsg \" + userMData[0].project_id[0].message[0].message_body);\n      // console.warn(\"usmsfn \");\n      isLoading.current = false;\n    }\n  };\n  const test = () => {\n    console.warn(\"teting \");\n  };\n  useEffect(() => {\n    if (isLoading.current) {\n      getUmessage();\n      isLoading.current = false;\n    } else {\n\n      // test();\n    }\n  }, []);\n  useEffect(() => {\n    Showmessage();\n  }, [userMessage]);\n\n  // const Showmessage = () => {\n  //     // alert(\"sshow message \");\n  //     if (userMessage) {\n  //         alert(\"its working \" + userMessage[0].project_id[0].message[0].message_body);\n\n  //         return <div>\n  //             {userMessage.map(user =>\n  //                 user.project_id.map(project =>\n  //                     project.message.map(m =>\n  //                         m.message_sender == username.name ?\n\n  //                             <span className=\"messageSend \">\n  //                                 <span className=\"messageSendBody\">{m.message_body}</span>\n  //                                 <span className=\"messageSendTime \">1:00</span>\n  //                             </span>\n\n  //                             :\n  //                             <span className=\"messageReceived \">\n  //                                 <span className=\"messageReceivedBody\">{m.message_body}</span>\n  //                                 <span className=\"messageReceivedTime \">12:00</span>\n  //                             </span>\n\n  //                     )\n  //                 )\n  //             )}\n  //         </div>\n  //     }\n  //     else {\n  //         return <div> Getting Message</div>\n  //     }\n\n  // };\n  const alertClicked = () => {\n    alert('You clicked the third ListGroupItem');\n  };\n  const Showmessage = () => {\n    // alert(\"sshow message \");\n    if (userMessage) {\n      alert(\"its working \" + userMessage[0].project_id[0].message[0].message_body);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: userMessage.map(user => user.project_id.map(project => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          className: \"messageListItem\",\n          action: true,\n          onClick: Sub,\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Getting Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  if (isLoading.current) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading hold on\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getUmessage,\n        children: \" get api\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"messageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n        children: /*#__PURE__*/_jsxDEV(Showmessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"messageBody\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"messageBar \",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"messageInput\",\n          type: \"text\",\n          placeholder: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Message, \"wbVbueOwc+h6aUXjzmd0uNP1xFo=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["useEffect","useRef","useState","Container","Row","Col","ListGroup","ListGroupItem","Button","jsxDEV","_jsxDEV","Message","_s","username","JSON","parse","localStorage","getItem","userMessage","setUMesg","isLoading","getUmessage","userMData","fetch","method","body","stringify","name","headers","json","console","warn","project_id","message","message_body","current","test","Showmessage","alertClicked","alert","children","map","user","project","className","action","onClick","Sub","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/code/web development/buildex/client/src/Components/message/message.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { Container, Row, Col, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\r\nimport './message.css';\r\nfunction Message() {\r\n    const username = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [userMessage, setUMesg] = useState(\"\");\r\n    const isLoading = useRef(true); // Loading state\r\n    // console.warn(\"uname \"+username.name);\r\n    const getUmessage = async () => {\r\n\r\n        let userMData = await fetch(\"http://localhost:3001/getusermessage\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                name: username.name\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n\r\n        })\r\n\r\n        userMData = await userMData.json();\r\n        if (userMData) {\r\n            setUMesg(userMData);\r\n            console.warn(\"umsg \" + userMData[0].project_id[0].message[0].message_body)\r\n            // console.warn(\"usmsfn \");\r\n            isLoading.current = false;\r\n        }\r\n    };\r\n    const test = () => {\r\n        console.warn(\"teting \");\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isLoading.current) {\r\n            getUmessage();\r\n\r\n            isLoading.current = false;\r\n\r\n        }\r\n        else {\r\n\r\n            // test();\r\n\r\n        }\r\n\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        Showmessage();\r\n    }, [userMessage]);\r\n\r\n    // const Showmessage = () => {\r\n    //     // alert(\"sshow message \");\r\n    //     if (userMessage) {\r\n    //         alert(\"its working \" + userMessage[0].project_id[0].message[0].message_body);\r\n\r\n\r\n    //         return <div>\r\n    //             {userMessage.map(user =>\r\n    //                 user.project_id.map(project =>\r\n    //                     project.message.map(m =>\r\n    //                         m.message_sender == username.name ?\r\n\r\n\r\n    //                             <span className=\"messageSend \">\r\n    //                                 <span className=\"messageSendBody\">{m.message_body}</span>\r\n    //                                 <span className=\"messageSendTime \">1:00</span>\r\n    //                             </span>\r\n\r\n\r\n\r\n    //                             :\r\n    //                             <span className=\"messageReceived \">\r\n    //                                 <span className=\"messageReceivedBody\">{m.message_body}</span>\r\n    //                                 <span className=\"messageReceivedTime \">12:00</span>\r\n    //                             </span>\r\n\r\n\r\n    //                     )\r\n    //                 )\r\n    //             )}\r\n    //         </div>\r\n    //     }\r\n    //     else {\r\n    //         return <div> Getting Message</div>\r\n    //     }\r\n\r\n\r\n    // };\r\n    const alertClicked = () => {\r\n        alert('You clicked the third ListGroupItem');\r\n      };\r\n\r\n    const Showmessage = () => {\r\n        // alert(\"sshow message \");\r\n        if (userMessage) {\r\n            alert(\"its working \" + userMessage[0].project_id[0].message[0].message_body);\r\n\r\n\r\n            return <div>\r\n                {userMessage.map(user =>\r\n                    user.project_id.map(project =>\r\n                        <ListGroupItem className=\"messageListItem\" action onClick={Sub} >{project.name}</ListGroupItem>\r\n                    )\r\n                )}\r\n            </div>\r\n        }\r\n        else {\r\n            return <div> Getting Message</div>\r\n        }\r\n\r\n\r\n    };\r\n\r\n    if (isLoading.current) {\r\n        return (\r\n            <div>Loading hold on\r\n                <button onClick={getUmessage}> get api</button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Container className=\"messageContainer\">\r\n                {/* <button onClick={getUmessage}> get api</button> */}\r\n                <ListGroup>\r\n                <Showmessage />\r\n\r\n                    \r\n                </ListGroup>\r\n\r\n                <Container className=\"messageBody\">\r\n                    {/* <span className=\"messageReceived \">\r\n                        <span className=\"messageReceivedBody\">jaysing hfkjfdf kfdf f dskfh dfhfj fkjfhdkjfd</span>\r\n                        <span className=\"messageReceivedTime \">12:00</span>\r\n                    </span>\r\n\r\n                    <span className=\"messageSend \">\r\n                        <span className=\"messageSendBody\">jaysing hfkjfdf kfdf f dskfh dfhfj fkjfhdkjfd</span>\r\n                        <span className=\"messageSendTime \">1:00</span>\r\n                    </span> */}\r\n\r\n                </Container>\r\n                <Container className=\"messageBar \">\r\n                    <input className=\"messageInput\" type=\"text\" placeholder=\"Message\"></input>\r\n                    <Button></Button>\r\n                </Container>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Message;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}