{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\code\\\\web development\\\\buildex\\\\client\\\\src\\\\Components\\\\dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport './dashboard.css';\nimport { Card, Button } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const username = JSON.parse(localStorage.getItem(\"user\"));\n  const [userProjectData, setUPdata] = useState(\"\");\n  const [compTask, setCTask] = useState(\"..\");\n  const [incoTask, setITask] = useState(\"\");\n  const [overTask, setOTask] = useState(\"\");\n  const getProject = async () => {\n    let userProjectResult = await fetch(\"http://localhost:3001/getuserprojectstatus\", {\n      method: \"post\",\n      body: JSON.stringify({\n        name: username.name\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n\n    // userProjectResult = await userProjectResult.json();\n    userProjectResult = await userProjectResult.json();\n    console.warn(\"before da \" + userProjectResult);\n    if (userProjectResult) {\n      setUPdata(userProjectResult);\n    }\n    console.warn(\"after da \" + userProjectData);\n  };\n  useEffect(() => {\n    getProject();\n    getProjectStatus();\n  }, []);\n  const getProjectStatus = () => {\n    alert(\"its projectstaus\");\n    if (userProjectData[0]) {\n      console.warn(\" its if \");\n      userProjectData.map(x => x.project_id.map(y => console.warn(\"y\" + y.ps)));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboardContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCard\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: compTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCard\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Incompleted Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCard\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Overdure Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCard\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Total Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCardGraph\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Incompleted task by section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCardGraph\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"All task by completion status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"T1kwE+z0STDJQ9/LU/Upa06DTc8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Card","Button","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","username","JSON","parse","localStorage","getItem","userProjectData","setUPdata","compTask","setCTask","incoTask","setITask","overTask","setOTask","getProject","userProjectResult","fetch","method","body","stringify","name","headers","json","console","warn","getProjectStatus","alert","map","x","project_id","y","ps","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/code/web development/buildex/client/src/Components/dashboard/dashboard.js"],"sourcesContent":["import './dashboard.css'\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nfunction Dashboard() {\r\n\r\n    const username = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [userProjectData,setUPdata]=useState(\"\");\r\n    const [compTask,setCTask]=useState(\"..\");\r\n    const [incoTask,setITask]=useState(\"\");\r\n    const [overTask,setOTask]=useState(\"\");\r\n    const getProject = async()=>{\r\n                let userProjectResult = await fetch(\"http://localhost:3001/getuserprojectstatus\",{\r\n                    method:\"post\",\r\n                    body: JSON.stringify({\r\n                        name: username.name,\r\n                       \r\n                    }),\r\n                    headers: {\r\n                        'Content-type': 'application/json'\r\n                    }\r\n                });\r\n\r\n                // userProjectResult = await userProjectResult.json();\r\n                userProjectResult = await userProjectResult.json();\r\n                console.warn(\"before da \"+userProjectResult);\r\n                if(userProjectResult)\r\n                {\r\n                    setUPdata(userProjectResult);\r\n                }\r\n\r\n                console.warn(\"after da \"+userProjectData);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getProject();\r\n        getProjectStatus();\r\n        \r\n    },[]);\r\n\r\n    const getProjectStatus = ()=>{\r\n        alert(\"its projectstaus\");\r\n            if(userProjectData[0])\r\n            {\r\n                console.warn(\" its if \");\r\n                userProjectData.map(x=> x.project_id.map(y=> console.warn(\"y\"+y.ps)));\r\n                \r\n            }\r\n            \r\n    };\r\n    return (\r\n        <div className='dashboardContainer'>\r\n                <Card className='dashboardCard'>\r\n                    <Card.Body>\r\n                        <Card.Title className='dashboardCardTitle'>Completed Tasks</Card.Title>\r\n                        <span className='CompletedTaskCount' >{compTask}</span>\r\n                        \r\n                    </Card.Body>\r\n                </Card>\r\n                <Card className='dashboardCard'>\r\n                    <Card.Body>\r\n                        <Card.Title className='dashboardCardTitle'>Incompleted Tasks</Card.Title>\r\n                        <span className='CompletedTaskCount' >100</span>\r\n                        \r\n                    </Card.Body>\r\n                </Card>\r\n                <Card className='dashboardCard'>\r\n                    <Card.Body>\r\n                        <Card.Title className='dashboardCardTitle'>Overdure Tasks</Card.Title>\r\n                        <span className='CompletedTaskCount' >100</span>\r\n                        \r\n                    </Card.Body>\r\n                </Card> \r\n                <Card className='dashboardCard'>\r\n                    <Card.Body>\r\n                        <Card.Title className='dashboardCardTitle'>Total Tasks</Card.Title>\r\n                        <span className='CompletedTaskCount' >100</span>\r\n                        \r\n                    </Card.Body>\r\n                </Card>\r\n\r\n                <Card className='dashboardCardGraph'>\r\n                    <Card.Body>\r\n                        <Card.Title className='dashboardCardTitle'>Incompleted task by section</Card.Title>\r\n                        <span className='CompletedTaskCount' >100</span>\r\n                        \r\n                    </Card.Body>\r\n                </Card>\r\n                    <Card className='dashboardCardGraph'>\r\n                        <Card.Body>\r\n                            <Card.Title className='dashboardCardTitle'>All task by completion status</Card.Title>\r\n                            <span className='CompletedTaskCount' >100</span>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n           \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}