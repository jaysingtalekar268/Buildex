{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\code\\\\web development\\\\buildex\\\\client\\\\src\\\\Components\\\\projectcards\\\\projectcards.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport './projectcards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectCards() {\n  _s();\n  let username = localStorage.getItem(\"user\");\n  const [userProjectList, setPList] = useState();\n  username = JSON.parse(username);\n  const getuserproject = async () => {\n    let userProjectResult = await fetch(\"http://localhost:3001/getuserproject\", {\n      method: 'post',\n      body: JSON.stringify({\n        name: username.name\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    userProjectResult = await userProjectResult.json();\n    if (userProjectResult.project_id) {\n      console.warn(userProjectResult.project_id);\n      setPList(userProjectResult.project_id);\n    }\n  };\n  useEffect(() => {\n    getuserproject();\n  }, []);\n  const ename = names => {\n    if (userProjectList)\n      // return names.map(name => <option value={name._id}>{name.name + \" \" + name._id}</option>);\n\n      return names.map(name => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"cardContainer \",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\" \", name.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            children: \"Go somewhere\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardDiv \",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"cardContainer \",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Card Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), ename(userProjectList)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectCards, \"mMYOZQTzsXUnoEPliFDOUWXtExU=\");\n_c = ProjectCards;\nexport default ProjectCards;\nvar _c;\n$RefreshReg$(_c, \"ProjectCards\");","map":{"version":3,"names":["useEffect","useState","Card","Button","jsxDEV","_jsxDEV","ProjectCards","_s","username","localStorage","getItem","userProjectList","setPList","JSON","parse","getuserproject","userProjectResult","fetch","method","body","stringify","name","headers","json","project_id","console","warn","ename","names","map","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","variant","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/code/web development/buildex/client/src/Components/projectcards/projectcards.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport './projectcards.css';\r\nfunction ProjectCards() {\r\n\r\n    let username = localStorage.getItem(\"user\");\r\n    const [userProjectList, setPList] = useState();\r\n    username = JSON.parse(username);\r\n    const getuserproject = async () => {\r\n        let userProjectResult = await fetch(\"http://localhost:3001/getuserproject\", {\r\n            method: 'post',\r\n            body: JSON.stringify({\r\n                name: username.name\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        });\r\n\r\n        userProjectResult = await userProjectResult.json();\r\n\r\n        if (userProjectResult.project_id) {\r\n            console.warn(userProjectResult.project_id);\r\n            setPList(userProjectResult.project_id);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getuserproject();\r\n    }, []);\r\n\r\n    const ename = (names) => {\r\n        if (userProjectList)\r\n\r\n            // return names.map(name => <option value={name._id}>{name.name + \" \" + name._id}</option>);\r\n\r\n            return (\r\n                names.map( name=>\r\n                <Card className=\"cardContainer \">\r\n                    <Card.Body>\r\n\r\n\r\n                        <Card.Title> {name.name}</Card.Title>\r\n                        <Card.Text>\r\n                            Some quick example text to build on the card title and make up the\r\n                            bulk of the card's content.\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\">Go somewhere</Button>\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n                )\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className=\"cardDiv \">\r\n\r\n            <Card className=\"cardContainer \">\r\n                <Card.Body>\r\n\r\n\r\n                    <Card.Title>Card Title</Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the\r\n                        bulk of the card's content.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\">Go somewhere</Button>\r\n                </Card.Body>\r\n\r\n            </Card>\r\n            {ename(userProjectList)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectCards;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}