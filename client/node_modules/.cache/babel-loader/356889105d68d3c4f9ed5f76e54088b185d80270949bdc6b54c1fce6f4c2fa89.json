{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\code\\\\web development\\\\buildex\\\\client\\\\src\\\\Components\\\\dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport './dashboard.css';\nimport { Card, Button } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const username = JSON.parse(localStorage.getItem(\"user\"));\n  const [userProjectData, setUPdata] = useState(\"\");\n  const [compTask, setCTask] = useState(0);\n  const [incoTask, setITask] = useState(0);\n  const [overTask, setOTask] = useState(0);\n  const getProject = async () => {\n    let userProjectResult = await fetch(\"http://localhost:3001/getuserprojectstatus\", {\n      method: \"post\",\n      body: JSON.stringify({\n        name: username.name\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n\n    // userProjectResult = await userProjectResult.json();\n    userProjectResult = await userProjectResult.json();\n    console.warn(\"before da \" + userProjectResult);\n    if (userProjectResult) {\n      setUPdata(userProjectResult);\n    }\n    console.warn(\"after da \" + userProjectData);\n  };\n  useEffect(() => {\n    getProject();\n  }, []);\n  useEffect(() => {\n    setCTask(0);\n    setITask(0);\n    setOTask(0);\n    getProjectStatus();\n  }, [userProjectData]);\n  const getProjectStatus = () => {\n    alert(\"its projectstaus\");\n    if (userProjectData[0]) {\n      console.warn(\" its if \");\n      userProjectData.map(x => x.project_id.map(y => {\n        console.warn(\"y  \" + y.pstatus);\n        if (y.pstatus == \"comp\") {\n          setCTask(compTask + 1);\n        } else if (y.pstatus == \"incomp\") {\n          setITask(incoTask + 1);\n        } else if (y.pstatus == \"ovdue\") {\n          setOTask(overTask + 1);\n        }\n      }));\n    } else {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboardContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCard\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: compTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCard\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Incompleted Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: incoTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCard\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Overdure Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: overTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCard\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Total Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCardGraph\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"Incompleted task by section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"dashboardCardGraph\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"dashboardCardTitle\",\n          children: \"All task by completion status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"CompletedTaskCount\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"Ztv4KeF0j+BTzDqsb4kr1p49Dj0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Card","Button","useEffect","useState","jsxDEV","_jsxDEV","Dashboard","_s","username","JSON","parse","localStorage","getItem","userProjectData","setUPdata","compTask","setCTask","incoTask","setITask","overTask","setOTask","getProject","userProjectResult","fetch","method","body","stringify","name","headers","json","console","warn","getProjectStatus","alert","map","x","project_id","y","pstatus","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/code/web development/buildex/client/src/Components/dashboard/dashboard.js"],"sourcesContent":["import './dashboard.css'\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nfunction Dashboard() {\r\n\r\n    const username = JSON.parse(localStorage.getItem(\"user\"));\r\n    const [userProjectData, setUPdata] = useState(\"\");\r\n    const [compTask, setCTask] = useState(0);\r\n    const [incoTask, setITask] = useState(0);\r\n    const [overTask, setOTask] = useState(0);\r\n    const getProject = async () => {\r\n        let userProjectResult = await fetch(\"http://localhost:3001/getuserprojectstatus\", {\r\n            method: \"post\",\r\n            body: JSON.stringify({\r\n                name: username.name,\r\n\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        });\r\n\r\n        // userProjectResult = await userProjectResult.json();\r\n        userProjectResult = await userProjectResult.json();\r\n        console.warn(\"before da \" + userProjectResult);\r\n        if (userProjectResult) {\r\n            setUPdata(userProjectResult);\r\n\r\n        }\r\n\r\n        console.warn(\"after da \" + userProjectData);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getProject()\r\n       \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCTask(0);\r\n        setITask(0);\r\n        setOTask(0);\r\n       getProjectStatus();\r\n    }, [userProjectData]);\r\n    const getProjectStatus = () => {\r\n       \r\n        alert(\"its projectstaus\");\r\n        if (userProjectData[0]) {   \r\n            console.warn(\" its if \");\r\n            userProjectData.map(x => x.project_id.map(y => {\r\n\r\n                console.warn(\"y  \" + y.pstatus)  \r\n                if (y.pstatus == \"comp\") {\r\n\r\n                    setCTask((compTask + 1));\r\n                }\r\n                else if (y.pstatus == \"incomp\") {\r\n                    setITask(incoTask + 1);\r\n                }\r\n                else if (y.pstatus == \"ovdue\") {\r\n                    setOTask(overTask + 1);\r\n                }\r\n\r\n            }));\r\n\r\n        }\r\n        else {\r\n         }\r\n    };\r\n    return (\r\n        <div className='dashboardContainer'>\r\n            <Card className='dashboardCard'>\r\n                <Card.Body>\r\n                    <Card.Title className='dashboardCardTitle'>Completed Tasks</Card.Title>\r\n                    <span className='CompletedTaskCount' >{compTask}</span>\r\n        {/* <button onClick={getProjectStatus}>get project</button> */}\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className='dashboardCard'>\r\n                <Card.Body>\r\n                    <Card.Title className='dashboardCardTitle'>Incompleted Tasks</Card.Title>\r\n                    <span className='CompletedTaskCount' >{incoTask}</span>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className='dashboardCard'>\r\n                <Card.Body>\r\n                    <Card.Title className='dashboardCardTitle'>Overdure Tasks</Card.Title>\r\n                    <span className='CompletedTaskCount' >{overTask}</span>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className='dashboardCard'>\r\n                <Card.Body>\r\n                    <Card.Title className='dashboardCardTitle'>Total Tasks</Card.Title>\r\n                    <span className='CompletedTaskCount' >100</span>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <Card className='dashboardCardGraph'>\r\n                <Card.Body>\r\n                    <Card.Title className='dashboardCardTitle'>Incompleted task by section</Card.Title>\r\n                    <span className='CompletedTaskCount' >100</span>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className='dashboardCardGraph'>\r\n                <Card.Body>\r\n                    <Card.Title className='dashboardCardTitle'>All task by completion status</Card.Title>\r\n                    <span className='CompletedTaskCount' >100</span>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}