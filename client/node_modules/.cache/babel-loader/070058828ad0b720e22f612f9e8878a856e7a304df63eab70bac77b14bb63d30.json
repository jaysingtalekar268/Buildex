{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\code\\\\web development\\\\buildex\\\\client\\\\src\\\\Components\\\\projectcards\\\\projectcards.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport './projectcards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectCards() {\n  _s();\n  let username = localStorage.getItem(\"user\");\n  const [userProjectList, setPList] = useState();\n  username = JSON.parse(username);\n  const getuserproject = async () => {\n    let userProjectResult = await fetch(\"http://localhost:3001/getuserproject\", {\n      method: 'post',\n      body: JSON.stringify({\n        name: username.name\n      }),\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    userProjectResult = await userProjectResult.json();\n    if (userProjectResult.project_id) {\n      console.warn(userProjectResult.project_id);\n    }\n  };\n  useEffect(() => {\n    getuserproject();\n  }, []);\n  const ename = names => {\n    if (userProjectList) return names.map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: name._id,\n      children: name.name + \" \" + name._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardDiv \",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"cardContainer \",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: \"Card Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(ProjectCards, \"MmCZJUgx9VcGWnV8D71BQIJb8Ck=\");\n_c = ProjectCards;\nexport default ProjectCards;\nvar _c;\n$RefreshReg$(_c, \"ProjectCards\");","map":{"version":3,"names":["useEffect","useState","Card","Button","jsxDEV","_jsxDEV","ProjectCards","_s","username","localStorage","getItem","userProjectList","setPList","JSON","parse","getuserproject","userProjectResult","fetch","method","body","stringify","name","headers","json","project_id","console","warn","ename","names","map","value","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Body","Title","Text","variant","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/code/web development/buildex/client/src/Components/projectcards/projectcards.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport './projectcards.css';\r\nfunction ProjectCards() {\r\n\r\n    let username = localStorage.getItem(\"user\");\r\n    const [userProjectList,setPList]=useState();\r\n    username = JSON.parse(username);\r\n    const getuserproject = async () => {\r\n        let userProjectResult = await fetch(\"http://localhost:3001/getuserproject\", {\r\n            method: 'post',\r\n            body: JSON.stringify({\r\n                name: username.name\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        });\r\n\r\n            userProjectResult = await userProjectResult.json();\r\n            \r\n            if(userProjectResult.project_id)\r\n            {\r\n                console.warn(userProjectResult.project_id);\r\n\r\n            }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        getuserproject();\r\n    }, []);\r\n\r\n    const ename = (names) => {\r\n        if (userProjectList)\r\n            return names.map(name => <option value={name._id}>{name.name + \" \" + name._id}</option>);\r\n    }\r\n\r\n    return (\r\n        <div className=\"cardDiv \">\r\n\r\n            <Card className=\"cardContainer \">\r\n                <Card.Body>\r\n\r\n\r\n                    <Card.Title>Card Title</Card.Title>\r\n                    <Card.Text>\r\n                        Some quick example text to build on the card title and make up the\r\n                        bulk of the card's content.\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\">Go somewhere</Button>\r\n                </Card.Body>\r\n                \r\n            </Card>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectCards;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAC9C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEpB,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC3C,MAAM,CAACC,eAAe,EAACC,QAAQ,CAAC,GAACX,QAAQ,EAAE;EAC3CO,QAAQ,GAAGK,IAAI,CAACC,KAAK,CAACN,QAAQ,CAAC;EAC/B,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIC,iBAAiB,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACxEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN,IAAI,CAACO,SAAS,CAAC;QACjBC,IAAI,EAAEb,QAAQ,CAACa;MACnB,CAAC,CAAC;MACFC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEEN,iBAAiB,GAAG,MAAMA,iBAAiB,CAACO,IAAI,EAAE;IAElD,IAAGP,iBAAiB,CAACQ,UAAU,EAC/B;MACIC,OAAO,CAACC,IAAI,CAACV,iBAAiB,CAACQ,UAAU,CAAC;IAE9C;EAER,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACZe,cAAc,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,KAAK,GAAIC,KAAK,IAAK;IACrB,IAAIjB,eAAe,EACf,OAAOiB,KAAK,CAACC,GAAG,CAACR,IAAI,iBAAIhB,OAAA;MAAQyB,KAAK,EAAET,IAAI,CAACU,GAAI;MAAAC,QAAA,EAAEX,IAAI,CAACA,IAAI,GAAG,GAAG,GAAGA,IAAI,CAACU;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,CAAC;EAChG,CAAC;EAED,oBACI/B,OAAA;IAAKgC,SAAS,EAAC,UAAU;IAAAL,QAAA,eAErB3B,OAAA,CAACH,IAAI;MAACmC,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC5B3B,OAAA,CAACH,IAAI,CAACoC,IAAI;QAAAN,QAAA,gBAGN3B,OAAA,CAACH,IAAI,CAACqC,KAAK;UAAAP,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAa,eACnC/B,OAAA,CAACH,IAAI,CAACsC,IAAI;UAAAR,QAAA,EAAC;QAGX;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,eACZ/B,OAAA,CAACF,MAAM;UAACsC,OAAO,EAAC,SAAS;UAAAT,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACvC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAET;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEL;AAEd;AAAC7B,EAAA,CAtDQD,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAwDrB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}